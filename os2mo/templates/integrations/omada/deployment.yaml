# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
{{- if .Values.omada.enabled }}
# TODO: see https://git.magenta.dk/rammearkitektur/os2mo-helm-chart/-/merge_requests/142#note_140651
{{- if not .Values.amqp.enabled }}
  {{- fail "Must have AMQP enabled if omada is enabled" }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omada-deployment
  labels:
    app: omada
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: omada
  strategy:
    type: Recreate  # we need to force Recreate strategy when using persistent volumes
  template:
    metadata:
      labels:
        app: omada
    spec:
      containers:
        - name: omada
          image: "{{ .Values.omada.image.registry }}/{{ .Values.omada.image.repository }}:{{ .Values.omada.image.tag }}"
          imagePullPolicy: {{ .Values.omada.image.pullPolicy }}
          env:
            - name: ENABLE_METRICS
              value: "True"
            # TODO: Use separate integration token instead of global dipex one
            - name: MO__CLIENT_ID
              value: "dipex"
            - name: MO__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-dipex-secret
                  key: client_secret
            # TODO: use separate integration AMQP user instead of global one
            - name: MO__AMQP__URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.amqp.url_secret }}
                  key: url
            - name: OMADA__URL
              value: "{{ .Values.omada.odata_url }}"
            {{- if .Values.omada.host_header }}
            - name: OMADA__HOST_HEADER
              value: "{{ .Values.omada.host_header }}"
            {{- end }}
            {{- if .Values.omada.ntlm.enabled }}
            - name: OMADA__NTLM_USERNAME
              valueFrom:
                secretKeyRef:
                  name: omada-ntlm-secret
                  key: ntlm_username
            - name: OMADA__NTLM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: omada-ntlm-secret
                  key: ntlm_password
            {{- end }}
            - name: OMADA__INSECURE_SKIP_SSL_VERIFY
              value: "{{ .Values.omada.insecure_skip_ssl_verify }}"
            # TODO: use separate integration AMQP user instead of global one
            - name: OMADA__AMQP__URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.amqp.url_secret }}
                  key: url
            - name: OMADA__INTERVAL
              value: "{{ .Values.omada.interval }}"
          envFrom:
            - configMapRef:
                name: omada
          ports:
            - containerPort: 80
          volumeMounts:
            - name: omada-pv-storage
              mountPath: /data/
          resources:
            {{- toYaml .Values.omada.resources | nindent 12 }}
      initContainers:
        {{ include "os2mo.wait-for-keycloak" . | nindent 8 }}
        {{ include "os2mo.wait-for-mox" . | nindent 8 }}
        {{ include "os2mo.wait-for-mo" . | nindent 8 }}
        - name: os2mo-init
          image: "{{ .Values.os2mo.init.image.registry }}/{{ .Values.os2mo.init.image.repository }}:{{ .Values.os2mo.init.image.tag }}"
          imagePullPolicy: {{ .Values.os2mo.init.image.pullPolicy }}
          env:
            - name: AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: MO_URL
              value: "http://mo-service:5000"
            - name: CLIENT_ID
              value: "dipex"
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-dipex-secret
                  key: client_secret
            - name: LORA_URL
              value: "http://mox-service:8080"
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
          volumeMounts:
           - name: omada-init-config-volume
             mountPath: /config
             readOnly: true
      volumes:
        - name: omada-init-config-volume
          configMap:
            name: omada-init-config
            items:
              - key: config
                path: config.yml
        - name: omada-pv-storage
          persistentVolumeClaim:
            claimName: omada-pv-claim

{{- end }}
