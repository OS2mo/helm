# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
{{- if .Values.fkk.enabled }}
# TODO: see https://git.magenta.dk/rammearkitektur/os2mo-helm-chart/-/merge_requests/142#note_140651
{{- if not .Values.amqp.enabled }}
  {{- fail "Must have AMQP enabled if fkk is enabled" }}
{{- end }}
{{- $keycloak_client_id := "integration_fkk" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fkk-deployment
  labels:
    app: fkk
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fkk
  template:
    metadata:
      labels:
        app: fkk
    spec:
      containers:
        - name: fkk
          image: "{{ .Values.fkk.image.registry }}/{{ .Values.fkk.image.repository }}:{{ .Values.fkk.image.tag }}"
          env:
            # FastRAMQPI
            {{ if .Values.sentry.environment }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sentry.secret }}
                  key: dsn
            - name: SENTRY_ENVIRONMENT
              value: {{ .Values.sentry.environment | quote }}
            {{ end }}
            # OS2mo
            - name: FASTRAMQPI__MO_URL
              value: "http://mo-service:5000"
            - name: FASTRAMQPI__CLIENT_ID
              value: "{{ $keycloak_client_id }}"
            - name: FASTRAMQPI__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: fkk-client-secret
                  key: client_secret
            - name: FASTRAMQPI__AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: FASTRAMQPI__AUTH_REALM
              value: "mo"
            # TODO: use separate integration AMQP user instead of global one
            - name: FASTRAMQPI__AMQP__URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.amqp.url_secret }}
                  key: url
              # Database
            - name: FASTRAMQPI__DATABASE__USER
              value: "fkk"
            - name: FASTRAMQPI__DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fkk-database-secret
                  key: database_password
            - name: FASTRAMQPI__DATABASE__HOST
              value: {{ .Values.database.host }}
            - name: FASTRAMQPI__DATABASE__NAME
              value: "fkk"
            # FKK
            # TODO: use separate integration AMQP user instead of global one
            - name: FKK__AMQP__URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.amqp.url_secret }}
                  key: url
            # Extras
            {{- if .Values.fkk.extraEnv }}
            {{ toYaml .Values.fkk.extraEnv | indent 12 | trim }}
            {{- end }}
          ports:
            - containerPort: 8000
          resources:
            {{- toYaml .Values.fkk.resources | nindent 12 }}
          volumeMounts:
            - name: fkk-cert-volume
              mountPath: /config
              readOnly: true
      initContainers:
        - name: fkk-db-init
          image: "{{ .Values.fkk.database.init.image.registry }}/{{ .Values.fkk.database.init.image.repository }}:{{ .Values.fkk.database.init.image.tag }}"
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.database.host }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{ if .Values.database.password_secret }}
                  name: {{ .Values.database.password_secret }}
                  {{ else }}
                  name: mox-db-secret
                  {{ end }}
                  key: db_password
            # The ENVs below are named KEYCLOAK_... since we are currently using
            # the Keycloak DB init-container. This will be fixed in
            # https://redmine.magenta-aps.dk/issues/57967
            - name: KEYCLOAK_DB_NAME
              value: fkk
            - name: KEYCLOAK_DB_USER
              value: fkk
            - name: KEYCLOAK_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fkk-database-secret
                  key: database_password
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
        {{ include "os2mo.wait-for-keycloak" . | nindent 8 }}
        - name: create-client-secret
          image: "{{ .Values.keycloak.integrationbuilder.image.registry }}/{{ .Values.keycloak.integrationbuilder.image.repository }}:{{ .Values.keycloak.integrationbuilder.image.tag }}"
          env:
            {{ include "os2mo.keycloak_terraform_db_connection" .  | nindent 12 }}
            - name: POSTGRES_SCHEMA_NAME
              value: terraform_remote_state_fkk
            # Keycloak REST connection
            - name: TF_VAR_admin_password
              valueFrom:
                secretKeyRef:
                  name: {{ include "os2mo.keycloak_admin_secret" . }}
                  key: admin_password
            # Configuration of the client
            - name: TF_VAR_client_name
              value: "{{ $keycloak_client_id }}"
            - name: TF_VAR_client_roles
              value: '["class_admin"]'
            - name: TF_VAR_client_secret
              valueFrom:
                secretKeyRef:
                  name: fkk-client-secret
                  key: client_secret
            - name: TF_VAR_client_uuid
              value: "f1c1c000-baad-c0de-0000-000000464b4b"
        {{ include "os2mo.wait-for-mo" . | nindent 8 }}
        - name: os2mo-init
          image: "{{ .Values.os2mo.init.image.registry }}/{{ .Values.os2mo.init.image.repository }}:{{ .Values.os2mo.init.image.tag }}"
          env:
            - name: MO_URL
              value: "http://mo-service:5000"
            - name: AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: AUTH_REALM
              value: "mo"
            - name: CLIENT_ID
              value: "dipex"  # TODO: don't use dipex client
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-dipex-secret
                  key: client_secret
            - name: LOG_LEVEL
              value: {{ .Values.os2mo.init.log_level | quote }}
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
          volumeMounts:
           - name: fkk-init-config-volume
             mountPath: /config
             readOnly: true
      volumes:
        - name: fkk-init-config-volume
          configMap:
            name: fkk-init-config
            items:
              - key: config
                path: config.yml
        - name: fkk-cert-volume
          secret:
            secretName: fkk-cert
            items:
              - key: cert
                path: cert.pem
{{- end }}
