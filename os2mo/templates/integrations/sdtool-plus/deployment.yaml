# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
{{- if .Values.sdtool_plus.enabled }}
{{- $keycloak_client_id := "integration_sdtool_plus" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdtool-plus
  labels:
    app: sdtool-plus
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: sdtool-plus
  template:
    metadata:
      labels:
        app: sdtool-plus
    spec:
      containers:
        - name: sdtool-plus
          image: "{{ .Values.sdtool_plus.image.registry }}/{{ .Values.sdtool_plus.image.repository }}:{{ .Values.sdtool_plus.image.tag }}"
          env:
            {{ if .Values.sentry.environment }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sentry.secret }}
                  key: dsn
            - name: SENTRY_ENVIRONMENT
              value: {{ .Values.sentry.environment | quote }}
            {{ end }}

            - name: MORA_BASE
              value: "http://mo-service:5000"
            - name: AUTH_SERVER
              value: "http://keycloak-service:8080/auth"
            - name: AUTH_REALM
              value: "mo"
            - name: CLIENT_ID
              value: "{{ $keycloak_client_id }}"
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: sdtool-plus-client-secret
                  key: client_secret

            # The three ENVs below require an sd-secret created in Flux

            - name: SD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sdtool_plus.sd_secret_name }}
                  key: sd_username
            - name: SD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sdtool_plus.sd_secret_name }}
                  key: sd_password
            - name: SD_INSTITUTION_IDENTIFIER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sdtool_plus.sd_secret_name }}
                  key: sd_institution

            {{- range $name, $value := .Values.sdtool_plus.environment }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}

          ports:
            - containerPort: 8000
          resources:
            {{- toYaml .Values.sdtool_plus.resources | nindent 12 }}
      initContainers:
        {{ include "os2mo.wait-for-keycloak" . | nindent 8 }}
        - name: create-client-secret
          image: "{{ .Values.keycloak.integrationbuilder.image.registry }}/{{ .Values.keycloak.integrationbuilder.image.repository }}:{{ .Values.keycloak.integrationbuilder.image.tag }}"
          env:
            {{ include "os2mo.keycloak_terraform_db_connection" .  | nindent 12 }}
            - name: POSTGRES_SCHEMA_NAME
              value: terraform_remote_state_sdtool_plus

            # Keycloak REST connection
            - name: TF_VAR_admin_password
              valueFrom:
                secretKeyRef:
                  name: {{ include "os2mo.keycloak_admin_secret" . }}
                  key: admin_password

            # Configuration of the client
            - name: TF_VAR_client_name
              value: "{{ $keycloak_client_id }}"
            - name: TF_VAR_client_roles
              value: '["admin"]'
            - name: TF_VAR_client_secret
              valueFrom:
                secretKeyRef:
                  name: sdtool-plus-client-secret
                  key: client_secret
            - name: TF_VAR_client_uuid
              value: "5d700141-baad-c0de-0000-7364746f6f6c"
{{- end }}
