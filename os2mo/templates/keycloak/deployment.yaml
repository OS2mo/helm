# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
  labels:
    app: keycloak
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          {{ if .Values.keycloak.ff_upgrade }}
          image: magentaaps/os2mo-keycloak:33.4.1
          env:
            {{- $is_https := empty .Values.ingress.tls_secret }}
            {{- $protocol := ternary "http" "https" $is_https }}
            - name: KC_HOSTNAME_URL
              value: "{{ $protocol }}://{{ .Values.ingress.hostname }}/auth/"
            - name: KC_HOSTNAME_ADMIN_URL
              value: "{{ $protocol }}://{{ .Values.ingress.hostname }}/auth/"

            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "os2mo.keycloak_admin_secret" . }}
                  key: admin_password

            - name: KC_DB_URL_HOST
              value: {{ .Values.database.host }}
            - name: KC_DB_SCHEMA
              value: public
            - name: KC_DB_DATABASE
              value: {{ .Values.database.keycloak.name }}
            - name: KC_DB_USERNAME
              value: {{ .Values.database.keycloak.user }}
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: db_password
            # TODO: #59355
            {{ if ne .Values.database.keycloak_jdbc_params "" }}
            - name: KC_DB_URL_PROPERTIES
              value: "?{{ .Values.database.keycloak_jdbc_params }}"
            {{ end }}
          {{ else }}
          image: "{{ .Values.keycloak.image.registry }}/{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          env:
            - name: KEYCLOAK_USER
              value: admin
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "os2mo.keycloak_admin_secret" . }}
                  key: admin_password

            {{- $is_https := empty .Values.ingress.tls_secret }}
            {{- $protocol := ternary "http" "https" $is_https }}
            - name: KEYCLOAK_FRONTEND_URL
              value: "{{ $protocol }}://{{ .Values.ingress.hostname }}/auth/"
            - name: PROXY_ADDRESS_FORWARDING
              value: 'true'

            - name: DB_VENDOR
              value: POSTGRES
            - name: DB_ADDR
              value: {{ .Values.database.host }}
            - name: DB_DATABASE
              value: {{ .Values.database.keycloak.name }}
            - name: DB_SCHEMA
              value: public
            - name: DB_USER
              value: {{ .Values.database.keycloak.user }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: db_password
            {{ if ne .Values.database.sslmode "" }}
            - name: JDBC_PARAMS
              value: "sslmode={{ .Values.database.sslmode }}"
            {{ end }}
          {{ end }}
          livenessProbe:
            httpGet:
              path: /auth/
              port: 8080
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
          startupProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
            failureThreshold: {{ .Values.keycloak.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.keycloak.startupProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.keycloak.resources | nindent 12 }}
      initContainers:
        - name: keycloak-init
          image: "{{ .Values.keycloak.init.image.registry }}/{{ .Values.keycloak.init.image.repository }}:{{ .Values.keycloak.init.image.tag }}"
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.db }}
            - name: POSTGRES_HOST
              value: {{ .Values.database.host }}
            - name: POSTGRES_USER
              value: "{{ .Values.database.user }}"
            {{ if ne .Values.database.sslmode "" }}
            - name: POSTGRES_SSL
              value: {{ .Values.database.sslmode }}
            {{ end }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{ if .Values.database.password_secret }}
                  name: {{ .Values.database.password_secret }}
                  {{ else }}
                  name: mox-db-secret
                  {{ end }}
                  key: db_password

            - name: KEYCLOAK_DB_NAME
              value: {{ .Values.database.keycloak.name }}
            - name: KEYCLOAK_DB_USER
              value: {{ .Values.database.keycloak.user }}
            - name: KEYCLOAK_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: db_password
          resources:
            {{- toYaml .Values.initContainers.resources | nindent 12 }}
